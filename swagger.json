{
  "openapi": "3.0.2",
  "info": {
    "title": "DiligentlyAI API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.diligently.ai/"
    }
  ],
  "paths": {
    "/admin_user": {
      "post": {
        "description": "creates a new admin user and creates their organization - called from auth0",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/self": {
      "get": {
        "description": "gets one's own details",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "is_admin": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "updates ones own account. Only need to send the fields that should be updated.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/org": {
      "get": {
        "description": "gets org details",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "plan_id": {
                      "type": "string"
                    },
                    "subscription_id": {
                      "type": "string"
                    },
                    "created_date": {
                      "type": "string"
                    },
                    "renewal_date": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "updates a org. Can only change the name. - admin only",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "gets all users in org - admin only",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/user": {
      "post": {
        "description": "creates a new user, adds them to org as well - admin only",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "updates a user. The user_id is required. Only need to send the fields that should be updated. - admin only",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "deletes a user - admin only",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "user_id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/evaluations": {
      "get": {
        "description": "get evaluations.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "prompt_id",
            "example": "data_summary"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "start_date",
            "example": "2023-12-23T12:32:21"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "end_date",
            "example": "2023-12-23T12:33:21"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "exec_id",
            "example": "125343-3422-7655-7564-345263"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "response_score",
            "example": "eq2"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "prompt_score",
            "example": "lt8"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "model_ids",
            "description": "comma seperated",
            "example": "openai.gpt-4,openai.gpt-3.5"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tags",
            "description": "comma seperated",
            "example": "user_id:2341,test_tag"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "prompt_id": {
                        "type": "string",
                        "example": "4123-3242-4234-4365"
                      },
                      "exec_id": {
                        "type": "string",
                        "example": "4123-3242-4234-4365"
                      },
                      "model_id": {
                        "type": "string",
                        "example": "gpt-4"
                      },
                      "environment": {
                        "type": "string",
                        "example": "adhoc"
                      },
                      "messages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "example": "user"
                            },
                            "content": {
                              "type": "string",
                              "example": "what is the meaning of life?"
                            }
                          }
                        }
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["tag1", "tag2"]
                      },
                      "run_time": {
                        "type": "number",
                        "example": 12
                      },
                      "prompt_details": {
                        "type": "object",
                        "properties": {
                          "full_text": {
                            "type": "string",
                            "example": "This is a long prompt with lots of characters."
                          },
                          "score": {
                            "type": "number",
                            "example": 1
                          },
                          "tokens": {
                            "type": "number",
                            "example": 122
                          },
                          "evaluation": {
                            "type": "string",
                            "example": "This is a long evaluation with lots of characters."
                          },
                          "eval_prompt_tokens": {
                            "type": "number",
                            "example": 122
                          },
                          "eval_response_tokens": {
                            "type": "number",
                            "example": 176
                          }
                        }
                      },
                      "response_details": {
                        "type": "object",
                        "properties": {
                          "full_text": {
                            "type": "string",
                            "example": "This is a long response with lots of characters."
                          },
                          "score": {
                            "type": "number",
                            "example": 1
                          },
                          "tokens": {
                            "type": "number",
                            "example": 122
                          },
                          "evaluation": {
                            "type": "string",
                            "example": "This is a long evaluation with lots of characters."
                          },
                          "eval_prompt_tokens": {
                            "type": "number",
                            "example": 122
                          },
                          "eval_response_tokens": {
                            "type": "number",
                            "example": 176
                          }
                        }
                      },
                      "date_created": {
                        "type": "string",
                        "example": "2023-11-23"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/evaluate_prompt": {
      "post": {
        "description": "execute prompt evaluation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt_id": {
                    "type": "string"
                  },
                  "prompt": {
                    "type": "string",
                    "example": "A full and complete, non-templated, prompt that is up for evaluation."
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "prompt_tokens": {
                    "type": "number",
                    "example": "123 | optional"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prompt_id": {
                      "type": "string"
                    },
                    "exec_id": {
                      "type": "string"
                    },
                    "prompt_eval": {
                      "type": "object",
                      "properties": {
                        "evaluation": {
                          "type": "string"
                        },
                        "score": {
                          "type": "number"
                        }
                      }
                    },
                    "date_created": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/evaluate_response": {
      "post": {
        "description": "execute response evaluation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt_id": {
                    "type": "string"
                  },
                  "exec_id": {
                    "type": "string"
                  },
                  "response": {
                    "type": "string",
                    "example": "A response that came from a different LLM, and is up for evaluation."
                  },
                  "model_id": {
                    "type": "string",
                    "example": "gpt-4-32k"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "response_tokens": {
                    "type": "number",
                    "example": "123 | optional"
                  },
                  "run_time": {
                    "type": "number",
                    "example": 12
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prompt_id": {
                      "type": "string"
                    },
                    "exec_id": {
                      "type": "string"
                    },
                    "response_eval": {
                      "type": "object",
                      "properties": {
                        "evaluation": {
                          "type": "string"
                        },
                        "score": {
                          "type": "number"
                        }
                      }
                    },
                    "date_created": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/evaluate": {
      "post": {
        "description": "execute evaluation of a prompt/response pair",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt_id": {
                    "type": "string"
                  },
                  "prompt": {
                    "type": "string",
                    "example": "A prompt that was sent to a LLM and is up for evaluation."
                  },
                  "response": {
                    "type": "string",
                    "example": "A response that came from a LLM, and is up for evaluation."
                  },
                  "model_id": {
                    "type": "string",
                    "example": "gpt-4-32k"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "run_time": {
                    "type": "number",
                    "example": 12
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "prompt_id": {
                      "type": "string"
                    },
                    "exec_id": {
                      "type": "string"
                    },
                    "date_created": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api_key": {
      "get": {
        "description": "gets all of the api_keys",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "api_key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "date_created": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "make a new api key",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "api_key": {
                      "type": "string"
                    },
                    "date_created": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "deletes an api_key",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "api_key"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        }
      }
    }
  }
}
